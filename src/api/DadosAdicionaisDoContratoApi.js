/*
 * sistema-api
 * Api para o Sistema de Gerenciamento de Entregas
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.34
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from "../ApiClient";
import {InlineResponse2001} from '../model/InlineResponse2001';
import {InlineResponse201} from '../model/InlineResponse201';
import {InlineResponse2012} from '../model/InlineResponse2012';
import {InlineResponse2013} from '../model/InlineResponse2013';

/**
* DadosAdicionaisDoContrato service.
* @module api/DadosAdicionaisDoContratoApi
* @version 1.0.0
*/
export class DadosAdicionaisDoContratoApi {

    /**
    * Constructs a new DadosAdicionaisDoContratoApi. 
    * @alias module:api/DadosAdicionaisDoContratoApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the v1CboDelete operation.
     * @callback moduleapi/DadosAdicionaisDoContratoApi~v1CboDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2001{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Remove um CBO do cadastro.
     * @param {String} cboId 
     * @param {module:api/DadosAdicionaisDoContratoApi~v1CboDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    v1CboDelete(cboId, callback) {
      
      let postBody = null;
      // verify the required parameter 'cboId' is set
      if (cboId === undefined || cboId === null) {
        throw new Error("Missing the required parameter 'cboId' when calling v1CboDelete");
      }

      let pathParams = {
        
      };
      let queryParams = {
        'cbo_id': cboId
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse2001;

      return this.apiClient.callApi(
        '/v1/cbo', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the v1CboGet operation.
     * @callback moduleapi/DadosAdicionaisDoContratoApi~v1CboGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2013{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * busca os dados de CBO.
     * @param {String} cboId 
     * @param {module:api/DadosAdicionaisDoContratoApi~v1CboGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    v1CboGet(cboId, callback) {
      
      let postBody = null;
      // verify the required parameter 'cboId' is set
      if (cboId === undefined || cboId === null) {
        throw new Error("Missing the required parameter 'cboId' when calling v1CboGet");
      }

      let pathParams = {
        
      };
      let queryParams = {
        'cbo_id': cboId
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse2013;

      return this.apiClient.callApi(
        '/v1/cbo', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the v1CboPost operation.
     * @callback moduleapi/DadosAdicionaisDoContratoApi~v1CboPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2001{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * adiciona um novo CBO.
     * @param {Number} cbo 
     * @param {Number} familia 
     * @param {String} gradeGrupo 
     * @param {String} ocupacao 
     * @param {String} perfilOcupacional 
     * @param {String} sinonimo 
     * @param {String} subgrupoPricipal 
     * @param {String} subgrupo 
     * @param {module:api/DadosAdicionaisDoContratoApi~v1CboPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    v1CboPost(cbo, familia, gradeGrupo, ocupacao, perfilOcupacional, sinonimo, subgrupoPricipal, subgrupo, callback) {
      
      let postBody = null;
      // verify the required parameter 'cbo' is set
      if (cbo === undefined || cbo === null) {
        throw new Error("Missing the required parameter 'cbo' when calling v1CboPost");
      }
      // verify the required parameter 'familia' is set
      if (familia === undefined || familia === null) {
        throw new Error("Missing the required parameter 'familia' when calling v1CboPost");
      }
      // verify the required parameter 'gradeGrupo' is set
      if (gradeGrupo === undefined || gradeGrupo === null) {
        throw new Error("Missing the required parameter 'gradeGrupo' when calling v1CboPost");
      }
      // verify the required parameter 'ocupacao' is set
      if (ocupacao === undefined || ocupacao === null) {
        throw new Error("Missing the required parameter 'ocupacao' when calling v1CboPost");
      }
      // verify the required parameter 'perfilOcupacional' is set
      if (perfilOcupacional === undefined || perfilOcupacional === null) {
        throw new Error("Missing the required parameter 'perfilOcupacional' when calling v1CboPost");
      }
      // verify the required parameter 'sinonimo' is set
      if (sinonimo === undefined || sinonimo === null) {
        throw new Error("Missing the required parameter 'sinonimo' when calling v1CboPost");
      }
      // verify the required parameter 'subgrupoPricipal' is set
      if (subgrupoPricipal === undefined || subgrupoPricipal === null) {
        throw new Error("Missing the required parameter 'subgrupoPricipal' when calling v1CboPost");
      }
      // verify the required parameter 'subgrupo' is set
      if (subgrupo === undefined || subgrupo === null) {
        throw new Error("Missing the required parameter 'subgrupo' when calling v1CboPost");
      }

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        'cbo': cbo,'familia': familia,'grade_grupo': gradeGrupo,'ocupacao': ocupacao,'perfil_ocupacional': perfilOcupacional,'sinonimo': sinonimo,'subgrupo_pricipal': subgrupoPricipal,'subgrupo': subgrupo
      };

      let authNames = ['bearerAuth'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = InlineResponse2001;

      return this.apiClient.callApi(
        '/v1/cbo', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the v1FuncaoDelete operation.
     * @callback moduleapi/DadosAdicionaisDoContratoApi~v1FuncaoDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2001{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * remove uma função.
     * @param {Object} opts Optional parameters
     * @param {Number} opts.funcId 
     * @param {module:api/DadosAdicionaisDoContratoApi~v1FuncaoDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    v1FuncaoDelete(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        'func_id': opts['funcId']
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse2001;

      return this.apiClient.callApi(
        '/v1/funcao', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the v1FuncaoGet operation.
     * @callback moduleapi/DadosAdicionaisDoContratoApi~v1FuncaoGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2012{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * busca as funções disponiveis para a empresa.
     * @param {Number} cdempresa 
     * @param {module:api/DadosAdicionaisDoContratoApi~v1FuncaoGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    v1FuncaoGet(cdempresa, callback) {
      
      let postBody = null;
      // verify the required parameter 'cdempresa' is set
      if (cdempresa === undefined || cdempresa === null) {
        throw new Error("Missing the required parameter 'cdempresa' when calling v1FuncaoGet");
      }

      let pathParams = {
        
      };
      let queryParams = {
        'cdempresa': cdempresa
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse2012;

      return this.apiClient.callApi(
        '/v1/funcao', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the v1FuncaoPatch operation.
     * @callback moduleapi/DadosAdicionaisDoContratoApi~v1FuncaoPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2001{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Altera uma função.
     * @param {Object} opts Optional parameters
     * @param {String} opts.funcNome 
     * @param {Number} opts.cboId 
     * @param {module:api/DadosAdicionaisDoContratoApi~v1FuncaoPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    v1FuncaoPatch(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        'func_nome': opts['funcNome'],'cbo_id': opts['cboId']
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse2001;

      return this.apiClient.callApi(
        '/v1/funcao', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the v1FuncaoPost operation.
     * @callback moduleapi/DadosAdicionaisDoContratoApi~v1FuncaoPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2001{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * adiciona uma função.
     * @param {String} funcNome 
     * @param {Number} cboId 
     * @param {module:api/DadosAdicionaisDoContratoApi~v1FuncaoPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    v1FuncaoPost(funcNome, cboId, callback) {
      
      let postBody = null;
      // verify the required parameter 'funcNome' is set
      if (funcNome === undefined || funcNome === null) {
        throw new Error("Missing the required parameter 'funcNome' when calling v1FuncaoPost");
      }
      // verify the required parameter 'cboId' is set
      if (cboId === undefined || cboId === null) {
        throw new Error("Missing the required parameter 'cboId' when calling v1FuncaoPost");
      }

      let pathParams = {
        
      };
      let queryParams = {
        'func_nome': funcNome,'cbo_id': cboId
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse2001;

      return this.apiClient.callApi(
        '/v1/funcao', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the v1HorariosDelete operation.
     * @callback moduleapi/DadosAdicionaisDoContratoApi~v1HorariosDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2001{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * remove um horário cadastrado.
     * @param {Object} opts Optional parameters
     * @param {Number} opts.horaId 
     * @param {module:api/DadosAdicionaisDoContratoApi~v1HorariosDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    v1HorariosDelete(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        'hora_id': opts['horaId']
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse2001;

      return this.apiClient.callApi(
        '/v1/horarios', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the v1HorariosGet operation.
     * @callback moduleapi/DadosAdicionaisDoContratoApi~v1HorariosGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<'String'>{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * busca os dados de horário.
     * @param {Number} cdempresa 
     * @param {module:api/DadosAdicionaisDoContratoApi~v1HorariosGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    v1HorariosGet(cdempresa, callback) {
      
      let postBody = null;
      // verify the required parameter 'cdempresa' is set
      if (cdempresa === undefined || cdempresa === null) {
        throw new Error("Missing the required parameter 'cdempresa' when calling v1HorariosGet");
      }

      let pathParams = {
        
      };
      let queryParams = {
        'cdempresa': cdempresa
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ['String'];

      return this.apiClient.callApi(
        '/v1/horarios', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the v1HorariosPatch operation.
     * @callback moduleapi/DadosAdicionaisDoContratoApi~v1HorariosPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse201{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * altera um horário de trabalho já cadastrado.
     * @param {String} descricao 
     * @param {String} domEntrada 
     * @param {String} domAlmocoSaida 
     * @param {String} domAmocoRetorno 
     * @param {String} domSaida 
     * @param {String} domIntervalo 
     * @param {String} segEntrada 
     * @param {String} segAlmocoSaida 
     * @param {String} segAmocoRetorno 
     * @param {String} segSaida 
     * @param {String} segIntervalo 
     * @param {String} terEntrada 
     * @param {String} terAlmocoSaida 
     * @param {String} terAmocoRetorno 
     * @param {String} terSaida 
     * @param {String} terIntervalo 
     * @param {String} quarEntrada 
     * @param {String} quarAlmocoSaida 
     * @param {String} quarAmocoRetorno 
     * @param {String} quarSaida 
     * @param {String} quarIntervalo 
     * @param {String} quinEntrada 
     * @param {String} quinAlmocoSaida 
     * @param {String} quinAmocoRetorno 
     * @param {String} quinSaida 
     * @param {String} quinIntervalo 
     * @param {String} sexEntrada 
     * @param {String} sexAlmocoSaida 
     * @param {String} sexAmocoRetorno 
     * @param {String} sexSaida 
     * @param {String} sexIntervalo 
     * @param {String} sabEntrada 
     * @param {String} sabAlmocoSaida 
     * @param {String} sabAmocoRetorno 
     * @param {String} sabSaida 
     * @param {String} sabIntervalo 
     * @param {module:api/DadosAdicionaisDoContratoApi~v1HorariosPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    v1HorariosPatch(descricao, domEntrada, domAlmocoSaida, domAmocoRetorno, domSaida, domIntervalo, segEntrada, segAlmocoSaida, segAmocoRetorno, segSaida, segIntervalo, terEntrada, terAlmocoSaida, terAmocoRetorno, terSaida, terIntervalo, quarEntrada, quarAlmocoSaida, quarAmocoRetorno, quarSaida, quarIntervalo, quinEntrada, quinAlmocoSaida, quinAmocoRetorno, quinSaida, quinIntervalo, sexEntrada, sexAlmocoSaida, sexAmocoRetorno, sexSaida, sexIntervalo, sabEntrada, sabAlmocoSaida, sabAmocoRetorno, sabSaida, sabIntervalo, callback) {
      
      let postBody = null;
      // verify the required parameter 'descricao' is set
      if (descricao === undefined || descricao === null) {
        throw new Error("Missing the required parameter 'descricao' when calling v1HorariosPatch");
      }
      // verify the required parameter 'domEntrada' is set
      if (domEntrada === undefined || domEntrada === null) {
        throw new Error("Missing the required parameter 'domEntrada' when calling v1HorariosPatch");
      }
      // verify the required parameter 'domAlmocoSaida' is set
      if (domAlmocoSaida === undefined || domAlmocoSaida === null) {
        throw new Error("Missing the required parameter 'domAlmocoSaida' when calling v1HorariosPatch");
      }
      // verify the required parameter 'domAmocoRetorno' is set
      if (domAmocoRetorno === undefined || domAmocoRetorno === null) {
        throw new Error("Missing the required parameter 'domAmocoRetorno' when calling v1HorariosPatch");
      }
      // verify the required parameter 'domSaida' is set
      if (domSaida === undefined || domSaida === null) {
        throw new Error("Missing the required parameter 'domSaida' when calling v1HorariosPatch");
      }
      // verify the required parameter 'domIntervalo' is set
      if (domIntervalo === undefined || domIntervalo === null) {
        throw new Error("Missing the required parameter 'domIntervalo' when calling v1HorariosPatch");
      }
      // verify the required parameter 'segEntrada' is set
      if (segEntrada === undefined || segEntrada === null) {
        throw new Error("Missing the required parameter 'segEntrada' when calling v1HorariosPatch");
      }
      // verify the required parameter 'segAlmocoSaida' is set
      if (segAlmocoSaida === undefined || segAlmocoSaida === null) {
        throw new Error("Missing the required parameter 'segAlmocoSaida' when calling v1HorariosPatch");
      }
      // verify the required parameter 'segAmocoRetorno' is set
      if (segAmocoRetorno === undefined || segAmocoRetorno === null) {
        throw new Error("Missing the required parameter 'segAmocoRetorno' when calling v1HorariosPatch");
      }
      // verify the required parameter 'segSaida' is set
      if (segSaida === undefined || segSaida === null) {
        throw new Error("Missing the required parameter 'segSaida' when calling v1HorariosPatch");
      }
      // verify the required parameter 'segIntervalo' is set
      if (segIntervalo === undefined || segIntervalo === null) {
        throw new Error("Missing the required parameter 'segIntervalo' when calling v1HorariosPatch");
      }
      // verify the required parameter 'terEntrada' is set
      if (terEntrada === undefined || terEntrada === null) {
        throw new Error("Missing the required parameter 'terEntrada' when calling v1HorariosPatch");
      }
      // verify the required parameter 'terAlmocoSaida' is set
      if (terAlmocoSaida === undefined || terAlmocoSaida === null) {
        throw new Error("Missing the required parameter 'terAlmocoSaida' when calling v1HorariosPatch");
      }
      // verify the required parameter 'terAmocoRetorno' is set
      if (terAmocoRetorno === undefined || terAmocoRetorno === null) {
        throw new Error("Missing the required parameter 'terAmocoRetorno' when calling v1HorariosPatch");
      }
      // verify the required parameter 'terSaida' is set
      if (terSaida === undefined || terSaida === null) {
        throw new Error("Missing the required parameter 'terSaida' when calling v1HorariosPatch");
      }
      // verify the required parameter 'terIntervalo' is set
      if (terIntervalo === undefined || terIntervalo === null) {
        throw new Error("Missing the required parameter 'terIntervalo' when calling v1HorariosPatch");
      }
      // verify the required parameter 'quarEntrada' is set
      if (quarEntrada === undefined || quarEntrada === null) {
        throw new Error("Missing the required parameter 'quarEntrada' when calling v1HorariosPatch");
      }
      // verify the required parameter 'quarAlmocoSaida' is set
      if (quarAlmocoSaida === undefined || quarAlmocoSaida === null) {
        throw new Error("Missing the required parameter 'quarAlmocoSaida' when calling v1HorariosPatch");
      }
      // verify the required parameter 'quarAmocoRetorno' is set
      if (quarAmocoRetorno === undefined || quarAmocoRetorno === null) {
        throw new Error("Missing the required parameter 'quarAmocoRetorno' when calling v1HorariosPatch");
      }
      // verify the required parameter 'quarSaida' is set
      if (quarSaida === undefined || quarSaida === null) {
        throw new Error("Missing the required parameter 'quarSaida' when calling v1HorariosPatch");
      }
      // verify the required parameter 'quarIntervalo' is set
      if (quarIntervalo === undefined || quarIntervalo === null) {
        throw new Error("Missing the required parameter 'quarIntervalo' when calling v1HorariosPatch");
      }
      // verify the required parameter 'quinEntrada' is set
      if (quinEntrada === undefined || quinEntrada === null) {
        throw new Error("Missing the required parameter 'quinEntrada' when calling v1HorariosPatch");
      }
      // verify the required parameter 'quinAlmocoSaida' is set
      if (quinAlmocoSaida === undefined || quinAlmocoSaida === null) {
        throw new Error("Missing the required parameter 'quinAlmocoSaida' when calling v1HorariosPatch");
      }
      // verify the required parameter 'quinAmocoRetorno' is set
      if (quinAmocoRetorno === undefined || quinAmocoRetorno === null) {
        throw new Error("Missing the required parameter 'quinAmocoRetorno' when calling v1HorariosPatch");
      }
      // verify the required parameter 'quinSaida' is set
      if (quinSaida === undefined || quinSaida === null) {
        throw new Error("Missing the required parameter 'quinSaida' when calling v1HorariosPatch");
      }
      // verify the required parameter 'quinIntervalo' is set
      if (quinIntervalo === undefined || quinIntervalo === null) {
        throw new Error("Missing the required parameter 'quinIntervalo' when calling v1HorariosPatch");
      }
      // verify the required parameter 'sexEntrada' is set
      if (sexEntrada === undefined || sexEntrada === null) {
        throw new Error("Missing the required parameter 'sexEntrada' when calling v1HorariosPatch");
      }
      // verify the required parameter 'sexAlmocoSaida' is set
      if (sexAlmocoSaida === undefined || sexAlmocoSaida === null) {
        throw new Error("Missing the required parameter 'sexAlmocoSaida' when calling v1HorariosPatch");
      }
      // verify the required parameter 'sexAmocoRetorno' is set
      if (sexAmocoRetorno === undefined || sexAmocoRetorno === null) {
        throw new Error("Missing the required parameter 'sexAmocoRetorno' when calling v1HorariosPatch");
      }
      // verify the required parameter 'sexSaida' is set
      if (sexSaida === undefined || sexSaida === null) {
        throw new Error("Missing the required parameter 'sexSaida' when calling v1HorariosPatch");
      }
      // verify the required parameter 'sexIntervalo' is set
      if (sexIntervalo === undefined || sexIntervalo === null) {
        throw new Error("Missing the required parameter 'sexIntervalo' when calling v1HorariosPatch");
      }
      // verify the required parameter 'sabEntrada' is set
      if (sabEntrada === undefined || sabEntrada === null) {
        throw new Error("Missing the required parameter 'sabEntrada' when calling v1HorariosPatch");
      }
      // verify the required parameter 'sabAlmocoSaida' is set
      if (sabAlmocoSaida === undefined || sabAlmocoSaida === null) {
        throw new Error("Missing the required parameter 'sabAlmocoSaida' when calling v1HorariosPatch");
      }
      // verify the required parameter 'sabAmocoRetorno' is set
      if (sabAmocoRetorno === undefined || sabAmocoRetorno === null) {
        throw new Error("Missing the required parameter 'sabAmocoRetorno' when calling v1HorariosPatch");
      }
      // verify the required parameter 'sabSaida' is set
      if (sabSaida === undefined || sabSaida === null) {
        throw new Error("Missing the required parameter 'sabSaida' when calling v1HorariosPatch");
      }
      // verify the required parameter 'sabIntervalo' is set
      if (sabIntervalo === undefined || sabIntervalo === null) {
        throw new Error("Missing the required parameter 'sabIntervalo' when calling v1HorariosPatch");
      }

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        'descricao': descricao,'dom_entrada': domEntrada,'dom_almoco_saida': domAlmocoSaida,'dom_amoco_retorno': domAmocoRetorno,'dom_saida': domSaida,'dom_intervalo': domIntervalo,'seg_entrada': segEntrada,'seg_almoco_saida': segAlmocoSaida,'seg_amoco_retorno': segAmocoRetorno,'seg_saida': segSaida,'seg_intervalo': segIntervalo,'ter_entrada': terEntrada,'ter_almoco_saida': terAlmocoSaida,'ter_amoco_retorno': terAmocoRetorno,'ter_saida': terSaida,'ter_intervalo': terIntervalo,'quar_entrada': quarEntrada,'quar_almoco_saida': quarAlmocoSaida,'quar_amoco_retorno': quarAmocoRetorno,'quar_saida': quarSaida,'quar_intervalo': quarIntervalo,'quin_entrada': quinEntrada,'quin_almoco_saida': quinAlmocoSaida,'quin_amoco_retorno': quinAmocoRetorno,'quin_saida': quinSaida,'quin_intervalo': quinIntervalo,'sex_entrada': sexEntrada,'sex_almoco_saida': sexAlmocoSaida,'sex_amoco_retorno': sexAmocoRetorno,'sex_saida': sexSaida,'sex_intervalo': sexIntervalo,'sab_entrada': sabEntrada,'sab_almoco_saida': sabAlmocoSaida,'sab_amoco_retorno': sabAmocoRetorno,'sab_saida': sabSaida,'sab_intervalo': sabIntervalo
      };

      let authNames = ['bearerAuth'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = InlineResponse201;

      return this.apiClient.callApi(
        '/v1/horarios', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the v1HorariosPost operation.
     * @callback moduleapi/DadosAdicionaisDoContratoApi~v1HorariosPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse201{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * cadastra um horário.
     * @param {String} descricao 
     * @param {String} domEntrada 
     * @param {String} domAlmocoSaida 
     * @param {String} domAmocoRetorno 
     * @param {String} domSaida 
     * @param {String} domIntervalo 
     * @param {String} segEntrada 
     * @param {String} segAlmocoSaida 
     * @param {String} segAmocoRetorno 
     * @param {String} segSaida 
     * @param {String} segIntervalo 
     * @param {String} terEntrada 
     * @param {String} terAlmocoSaida 
     * @param {String} terAmocoRetorno 
     * @param {String} terSaida 
     * @param {String} terIntervalo 
     * @param {String} quarEntrada 
     * @param {String} quarAlmocoSaida 
     * @param {String} quarAmocoRetorno 
     * @param {String} quarSaida 
     * @param {String} quarIntervalo 
     * @param {String} quinEntrada 
     * @param {String} quinAlmocoSaida 
     * @param {String} quinAmocoRetorno 
     * @param {String} quinSaida 
     * @param {String} quinIntervalo 
     * @param {String} sexEntrada 
     * @param {String} sexAlmocoSaida 
     * @param {String} sexAmocoRetorno 
     * @param {String} sexSaida 
     * @param {String} sexIntervalo 
     * @param {String} sabEntrada 
     * @param {String} sabAlmocoSaida 
     * @param {String} sabAmocoRetorno 
     * @param {String} sabSaida 
     * @param {String} sabIntervalo 
     * @param {module:api/DadosAdicionaisDoContratoApi~v1HorariosPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    v1HorariosPost(descricao, domEntrada, domAlmocoSaida, domAmocoRetorno, domSaida, domIntervalo, segEntrada, segAlmocoSaida, segAmocoRetorno, segSaida, segIntervalo, terEntrada, terAlmocoSaida, terAmocoRetorno, terSaida, terIntervalo, quarEntrada, quarAlmocoSaida, quarAmocoRetorno, quarSaida, quarIntervalo, quinEntrada, quinAlmocoSaida, quinAmocoRetorno, quinSaida, quinIntervalo, sexEntrada, sexAlmocoSaida, sexAmocoRetorno, sexSaida, sexIntervalo, sabEntrada, sabAlmocoSaida, sabAmocoRetorno, sabSaida, sabIntervalo, callback) {
      
      let postBody = null;
      // verify the required parameter 'descricao' is set
      if (descricao === undefined || descricao === null) {
        throw new Error("Missing the required parameter 'descricao' when calling v1HorariosPost");
      }
      // verify the required parameter 'domEntrada' is set
      if (domEntrada === undefined || domEntrada === null) {
        throw new Error("Missing the required parameter 'domEntrada' when calling v1HorariosPost");
      }
      // verify the required parameter 'domAlmocoSaida' is set
      if (domAlmocoSaida === undefined || domAlmocoSaida === null) {
        throw new Error("Missing the required parameter 'domAlmocoSaida' when calling v1HorariosPost");
      }
      // verify the required parameter 'domAmocoRetorno' is set
      if (domAmocoRetorno === undefined || domAmocoRetorno === null) {
        throw new Error("Missing the required parameter 'domAmocoRetorno' when calling v1HorariosPost");
      }
      // verify the required parameter 'domSaida' is set
      if (domSaida === undefined || domSaida === null) {
        throw new Error("Missing the required parameter 'domSaida' when calling v1HorariosPost");
      }
      // verify the required parameter 'domIntervalo' is set
      if (domIntervalo === undefined || domIntervalo === null) {
        throw new Error("Missing the required parameter 'domIntervalo' when calling v1HorariosPost");
      }
      // verify the required parameter 'segEntrada' is set
      if (segEntrada === undefined || segEntrada === null) {
        throw new Error("Missing the required parameter 'segEntrada' when calling v1HorariosPost");
      }
      // verify the required parameter 'segAlmocoSaida' is set
      if (segAlmocoSaida === undefined || segAlmocoSaida === null) {
        throw new Error("Missing the required parameter 'segAlmocoSaida' when calling v1HorariosPost");
      }
      // verify the required parameter 'segAmocoRetorno' is set
      if (segAmocoRetorno === undefined || segAmocoRetorno === null) {
        throw new Error("Missing the required parameter 'segAmocoRetorno' when calling v1HorariosPost");
      }
      // verify the required parameter 'segSaida' is set
      if (segSaida === undefined || segSaida === null) {
        throw new Error("Missing the required parameter 'segSaida' when calling v1HorariosPost");
      }
      // verify the required parameter 'segIntervalo' is set
      if (segIntervalo === undefined || segIntervalo === null) {
        throw new Error("Missing the required parameter 'segIntervalo' when calling v1HorariosPost");
      }
      // verify the required parameter 'terEntrada' is set
      if (terEntrada === undefined || terEntrada === null) {
        throw new Error("Missing the required parameter 'terEntrada' when calling v1HorariosPost");
      }
      // verify the required parameter 'terAlmocoSaida' is set
      if (terAlmocoSaida === undefined || terAlmocoSaida === null) {
        throw new Error("Missing the required parameter 'terAlmocoSaida' when calling v1HorariosPost");
      }
      // verify the required parameter 'terAmocoRetorno' is set
      if (terAmocoRetorno === undefined || terAmocoRetorno === null) {
        throw new Error("Missing the required parameter 'terAmocoRetorno' when calling v1HorariosPost");
      }
      // verify the required parameter 'terSaida' is set
      if (terSaida === undefined || terSaida === null) {
        throw new Error("Missing the required parameter 'terSaida' when calling v1HorariosPost");
      }
      // verify the required parameter 'terIntervalo' is set
      if (terIntervalo === undefined || terIntervalo === null) {
        throw new Error("Missing the required parameter 'terIntervalo' when calling v1HorariosPost");
      }
      // verify the required parameter 'quarEntrada' is set
      if (quarEntrada === undefined || quarEntrada === null) {
        throw new Error("Missing the required parameter 'quarEntrada' when calling v1HorariosPost");
      }
      // verify the required parameter 'quarAlmocoSaida' is set
      if (quarAlmocoSaida === undefined || quarAlmocoSaida === null) {
        throw new Error("Missing the required parameter 'quarAlmocoSaida' when calling v1HorariosPost");
      }
      // verify the required parameter 'quarAmocoRetorno' is set
      if (quarAmocoRetorno === undefined || quarAmocoRetorno === null) {
        throw new Error("Missing the required parameter 'quarAmocoRetorno' when calling v1HorariosPost");
      }
      // verify the required parameter 'quarSaida' is set
      if (quarSaida === undefined || quarSaida === null) {
        throw new Error("Missing the required parameter 'quarSaida' when calling v1HorariosPost");
      }
      // verify the required parameter 'quarIntervalo' is set
      if (quarIntervalo === undefined || quarIntervalo === null) {
        throw new Error("Missing the required parameter 'quarIntervalo' when calling v1HorariosPost");
      }
      // verify the required parameter 'quinEntrada' is set
      if (quinEntrada === undefined || quinEntrada === null) {
        throw new Error("Missing the required parameter 'quinEntrada' when calling v1HorariosPost");
      }
      // verify the required parameter 'quinAlmocoSaida' is set
      if (quinAlmocoSaida === undefined || quinAlmocoSaida === null) {
        throw new Error("Missing the required parameter 'quinAlmocoSaida' when calling v1HorariosPost");
      }
      // verify the required parameter 'quinAmocoRetorno' is set
      if (quinAmocoRetorno === undefined || quinAmocoRetorno === null) {
        throw new Error("Missing the required parameter 'quinAmocoRetorno' when calling v1HorariosPost");
      }
      // verify the required parameter 'quinSaida' is set
      if (quinSaida === undefined || quinSaida === null) {
        throw new Error("Missing the required parameter 'quinSaida' when calling v1HorariosPost");
      }
      // verify the required parameter 'quinIntervalo' is set
      if (quinIntervalo === undefined || quinIntervalo === null) {
        throw new Error("Missing the required parameter 'quinIntervalo' when calling v1HorariosPost");
      }
      // verify the required parameter 'sexEntrada' is set
      if (sexEntrada === undefined || sexEntrada === null) {
        throw new Error("Missing the required parameter 'sexEntrada' when calling v1HorariosPost");
      }
      // verify the required parameter 'sexAlmocoSaida' is set
      if (sexAlmocoSaida === undefined || sexAlmocoSaida === null) {
        throw new Error("Missing the required parameter 'sexAlmocoSaida' when calling v1HorariosPost");
      }
      // verify the required parameter 'sexAmocoRetorno' is set
      if (sexAmocoRetorno === undefined || sexAmocoRetorno === null) {
        throw new Error("Missing the required parameter 'sexAmocoRetorno' when calling v1HorariosPost");
      }
      // verify the required parameter 'sexSaida' is set
      if (sexSaida === undefined || sexSaida === null) {
        throw new Error("Missing the required parameter 'sexSaida' when calling v1HorariosPost");
      }
      // verify the required parameter 'sexIntervalo' is set
      if (sexIntervalo === undefined || sexIntervalo === null) {
        throw new Error("Missing the required parameter 'sexIntervalo' when calling v1HorariosPost");
      }
      // verify the required parameter 'sabEntrada' is set
      if (sabEntrada === undefined || sabEntrada === null) {
        throw new Error("Missing the required parameter 'sabEntrada' when calling v1HorariosPost");
      }
      // verify the required parameter 'sabAlmocoSaida' is set
      if (sabAlmocoSaida === undefined || sabAlmocoSaida === null) {
        throw new Error("Missing the required parameter 'sabAlmocoSaida' when calling v1HorariosPost");
      }
      // verify the required parameter 'sabAmocoRetorno' is set
      if (sabAmocoRetorno === undefined || sabAmocoRetorno === null) {
        throw new Error("Missing the required parameter 'sabAmocoRetorno' when calling v1HorariosPost");
      }
      // verify the required parameter 'sabSaida' is set
      if (sabSaida === undefined || sabSaida === null) {
        throw new Error("Missing the required parameter 'sabSaida' when calling v1HorariosPost");
      }
      // verify the required parameter 'sabIntervalo' is set
      if (sabIntervalo === undefined || sabIntervalo === null) {
        throw new Error("Missing the required parameter 'sabIntervalo' when calling v1HorariosPost");
      }

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        'descricao': descricao,'dom_entrada': domEntrada,'dom_almoco_saida': domAlmocoSaida,'dom_amoco_retorno': domAmocoRetorno,'dom_saida': domSaida,'dom_intervalo': domIntervalo,'seg_entrada': segEntrada,'seg_almoco_saida': segAlmocoSaida,'seg_amoco_retorno': segAmocoRetorno,'seg_saida': segSaida,'seg_intervalo': segIntervalo,'ter_entrada': terEntrada,'ter_almoco_saida': terAlmocoSaida,'ter_amoco_retorno': terAmocoRetorno,'ter_saida': terSaida,'ter_intervalo': terIntervalo,'quar_entrada': quarEntrada,'quar_almoco_saida': quarAlmocoSaida,'quar_amoco_retorno': quarAmocoRetorno,'quar_saida': quarSaida,'quar_intervalo': quarIntervalo,'quin_entrada': quinEntrada,'quin_almoco_saida': quinAlmocoSaida,'quin_amoco_retorno': quinAmocoRetorno,'quin_saida': quinSaida,'quin_intervalo': quinIntervalo,'sex_entrada': sexEntrada,'sex_almoco_saida': sexAlmocoSaida,'sex_amoco_retorno': sexAmocoRetorno,'sex_saida': sexSaida,'sex_intervalo': sexIntervalo,'sab_entrada': sabEntrada,'sab_almoco_saida': sabAlmocoSaida,'sab_amoco_retorno': sabAmocoRetorno,'sab_saida': sabSaida,'sab_intervalo': sabIntervalo
      };

      let authNames = ['bearerAuth'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = InlineResponse201;

      return this.apiClient.callApi(
        '/v1/horarios', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}