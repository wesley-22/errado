/*
 * sistema-api
 * Api para o Sistema de Gerenciamento de Entregas
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.34
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SistemaApi);
  }
}(this, function(expect, SistemaApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('V1HorariosBody1', function() {
      beforeEach(function() {
        instance = new SistemaApi.V1HorariosBody1();
      });

      it('should create an instance of V1HorariosBody1', function() {
        // TODO: update the code to test V1HorariosBody1
        expect(instance).to.be.a(SistemaApi.V1HorariosBody1);
      });

      it('should have the property descricao (base name: "descricao")', function() {
        // TODO: update the code to test the property descricao
        expect(instance).to.have.property('descricao');
        // expect(instance.descricao).to.be(expectedValueLiteral);
      });

      it('should have the property domEntrada (base name: "dom_entrada")', function() {
        // TODO: update the code to test the property domEntrada
        expect(instance).to.have.property('domEntrada');
        // expect(instance.domEntrada).to.be(expectedValueLiteral);
      });

      it('should have the property domAlmocoSaida (base name: "dom_almoco_saida")', function() {
        // TODO: update the code to test the property domAlmocoSaida
        expect(instance).to.have.property('domAlmocoSaida');
        // expect(instance.domAlmocoSaida).to.be(expectedValueLiteral);
      });

      it('should have the property domAmocoRetorno (base name: "dom_amoco_retorno")', function() {
        // TODO: update the code to test the property domAmocoRetorno
        expect(instance).to.have.property('domAmocoRetorno');
        // expect(instance.domAmocoRetorno).to.be(expectedValueLiteral);
      });

      it('should have the property domSaida (base name: "dom_saida")', function() {
        // TODO: update the code to test the property domSaida
        expect(instance).to.have.property('domSaida');
        // expect(instance.domSaida).to.be(expectedValueLiteral);
      });

      it('should have the property domIntervalo (base name: "dom_intervalo")', function() {
        // TODO: update the code to test the property domIntervalo
        expect(instance).to.have.property('domIntervalo');
        // expect(instance.domIntervalo).to.be(expectedValueLiteral);
      });

      it('should have the property segEntrada (base name: "seg_entrada")', function() {
        // TODO: update the code to test the property segEntrada
        expect(instance).to.have.property('segEntrada');
        // expect(instance.segEntrada).to.be(expectedValueLiteral);
      });

      it('should have the property segAlmocoSaida (base name: "seg_almoco_saida")', function() {
        // TODO: update the code to test the property segAlmocoSaida
        expect(instance).to.have.property('segAlmocoSaida');
        // expect(instance.segAlmocoSaida).to.be(expectedValueLiteral);
      });

      it('should have the property segAmocoRetorno (base name: "seg_amoco_retorno")', function() {
        // TODO: update the code to test the property segAmocoRetorno
        expect(instance).to.have.property('segAmocoRetorno');
        // expect(instance.segAmocoRetorno).to.be(expectedValueLiteral);
      });

      it('should have the property segSaida (base name: "seg_saida")', function() {
        // TODO: update the code to test the property segSaida
        expect(instance).to.have.property('segSaida');
        // expect(instance.segSaida).to.be(expectedValueLiteral);
      });

      it('should have the property segIntervalo (base name: "seg_intervalo")', function() {
        // TODO: update the code to test the property segIntervalo
        expect(instance).to.have.property('segIntervalo');
        // expect(instance.segIntervalo).to.be(expectedValueLiteral);
      });

      it('should have the property terEntrada (base name: "ter_entrada")', function() {
        // TODO: update the code to test the property terEntrada
        expect(instance).to.have.property('terEntrada');
        // expect(instance.terEntrada).to.be(expectedValueLiteral);
      });

      it('should have the property terAlmocoSaida (base name: "ter_almoco_saida")', function() {
        // TODO: update the code to test the property terAlmocoSaida
        expect(instance).to.have.property('terAlmocoSaida');
        // expect(instance.terAlmocoSaida).to.be(expectedValueLiteral);
      });

      it('should have the property terAmocoRetorno (base name: "ter_amoco_retorno")', function() {
        // TODO: update the code to test the property terAmocoRetorno
        expect(instance).to.have.property('terAmocoRetorno');
        // expect(instance.terAmocoRetorno).to.be(expectedValueLiteral);
      });

      it('should have the property terSaida (base name: "ter_saida")', function() {
        // TODO: update the code to test the property terSaida
        expect(instance).to.have.property('terSaida');
        // expect(instance.terSaida).to.be(expectedValueLiteral);
      });

      it('should have the property terIntervalo (base name: "ter_intervalo")', function() {
        // TODO: update the code to test the property terIntervalo
        expect(instance).to.have.property('terIntervalo');
        // expect(instance.terIntervalo).to.be(expectedValueLiteral);
      });

      it('should have the property quarEntrada (base name: "quar_entrada")', function() {
        // TODO: update the code to test the property quarEntrada
        expect(instance).to.have.property('quarEntrada');
        // expect(instance.quarEntrada).to.be(expectedValueLiteral);
      });

      it('should have the property quarAlmocoSaida (base name: "quar_almoco_saida")', function() {
        // TODO: update the code to test the property quarAlmocoSaida
        expect(instance).to.have.property('quarAlmocoSaida');
        // expect(instance.quarAlmocoSaida).to.be(expectedValueLiteral);
      });

      it('should have the property quarAmocoRetorno (base name: "quar_amoco_retorno")', function() {
        // TODO: update the code to test the property quarAmocoRetorno
        expect(instance).to.have.property('quarAmocoRetorno');
        // expect(instance.quarAmocoRetorno).to.be(expectedValueLiteral);
      });

      it('should have the property quarSaida (base name: "quar_saida")', function() {
        // TODO: update the code to test the property quarSaida
        expect(instance).to.have.property('quarSaida');
        // expect(instance.quarSaida).to.be(expectedValueLiteral);
      });

      it('should have the property quarIntervalo (base name: "quar_intervalo")', function() {
        // TODO: update the code to test the property quarIntervalo
        expect(instance).to.have.property('quarIntervalo');
        // expect(instance.quarIntervalo).to.be(expectedValueLiteral);
      });

      it('should have the property quinEntrada (base name: "quin_entrada")', function() {
        // TODO: update the code to test the property quinEntrada
        expect(instance).to.have.property('quinEntrada');
        // expect(instance.quinEntrada).to.be(expectedValueLiteral);
      });

      it('should have the property quinAlmocoSaida (base name: "quin_almoco_saida")', function() {
        // TODO: update the code to test the property quinAlmocoSaida
        expect(instance).to.have.property('quinAlmocoSaida');
        // expect(instance.quinAlmocoSaida).to.be(expectedValueLiteral);
      });

      it('should have the property quinAmocoRetorno (base name: "quin_amoco_retorno")', function() {
        // TODO: update the code to test the property quinAmocoRetorno
        expect(instance).to.have.property('quinAmocoRetorno');
        // expect(instance.quinAmocoRetorno).to.be(expectedValueLiteral);
      });

      it('should have the property quinSaida (base name: "quin_saida")', function() {
        // TODO: update the code to test the property quinSaida
        expect(instance).to.have.property('quinSaida');
        // expect(instance.quinSaida).to.be(expectedValueLiteral);
      });

      it('should have the property quinIntervalo (base name: "quin_intervalo")', function() {
        // TODO: update the code to test the property quinIntervalo
        expect(instance).to.have.property('quinIntervalo');
        // expect(instance.quinIntervalo).to.be(expectedValueLiteral);
      });

      it('should have the property sexEntrada (base name: "sex_entrada")', function() {
        // TODO: update the code to test the property sexEntrada
        expect(instance).to.have.property('sexEntrada');
        // expect(instance.sexEntrada).to.be(expectedValueLiteral);
      });

      it('should have the property sexAlmocoSaida (base name: "sex_almoco_saida")', function() {
        // TODO: update the code to test the property sexAlmocoSaida
        expect(instance).to.have.property('sexAlmocoSaida');
        // expect(instance.sexAlmocoSaida).to.be(expectedValueLiteral);
      });

      it('should have the property sexAmocoRetorno (base name: "sex_amoco_retorno")', function() {
        // TODO: update the code to test the property sexAmocoRetorno
        expect(instance).to.have.property('sexAmocoRetorno');
        // expect(instance.sexAmocoRetorno).to.be(expectedValueLiteral);
      });

      it('should have the property sexSaida (base name: "sex_saida")', function() {
        // TODO: update the code to test the property sexSaida
        expect(instance).to.have.property('sexSaida');
        // expect(instance.sexSaida).to.be(expectedValueLiteral);
      });

      it('should have the property sexIntervalo (base name: "sex_intervalo")', function() {
        // TODO: update the code to test the property sexIntervalo
        expect(instance).to.have.property('sexIntervalo');
        // expect(instance.sexIntervalo).to.be(expectedValueLiteral);
      });

      it('should have the property sabEntrada (base name: "sab_entrada")', function() {
        // TODO: update the code to test the property sabEntrada
        expect(instance).to.have.property('sabEntrada');
        // expect(instance.sabEntrada).to.be(expectedValueLiteral);
      });

      it('should have the property sabAlmocoSaida (base name: "sab_almoco_saida")', function() {
        // TODO: update the code to test the property sabAlmocoSaida
        expect(instance).to.have.property('sabAlmocoSaida');
        // expect(instance.sabAlmocoSaida).to.be(expectedValueLiteral);
      });

      it('should have the property sabAmocoRetorno (base name: "sab_amoco_retorno")', function() {
        // TODO: update the code to test the property sabAmocoRetorno
        expect(instance).to.have.property('sabAmocoRetorno');
        // expect(instance.sabAmocoRetorno).to.be(expectedValueLiteral);
      });

      it('should have the property sabSaida (base name: "sab_saida")', function() {
        // TODO: update the code to test the property sabSaida
        expect(instance).to.have.property('sabSaida');
        // expect(instance.sabSaida).to.be(expectedValueLiteral);
      });

      it('should have the property sabIntervalo (base name: "sab_intervalo")', function() {
        // TODO: update the code to test the property sabIntervalo
        expect(instance).to.have.property('sabIntervalo');
        // expect(instance.sabIntervalo).to.be(expectedValueLiteral);
      });

    });
  });

}));
